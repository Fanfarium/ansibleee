---
- name: Install Docker and Jenkins in a Docker container
  hosts: localhost
  become: yes

  tasks:
    - name: Remove old Docker packages
      apt:
        name: "{{ item }}"
        state: absent
      with_items:
        - docker.io
        - docker-doc
        - docker-compose
        - docker-compose-v2
        - podman-docker
        - containerd
        - runc

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages for Docker installation
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository to Apt sources
      lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        line: |
          deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        create: yes
        mode: '0644'

    - name: Update apt cache again
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Start Jenkins container
      docker_container:
        name: jenkins
        image: jenkins/jenkins:lts
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
          - "50000:50000"
        volumes:
          - /srv/jenkins_home:/var/jenkins_home

    - name: Check if Jenkins is running
      uri:
        url: "http://localhost:8080"
        method: GET
        status_code: 200
      register: jenkins_status
      retries: 30
      delay: 10
      until: jenkins_status.status == 200

    - name: Output initial Jenkins password
      command: cat /srv/jenkins_home/secrets/initialAdminPassword
      register: initial_password

    - name: Show initial Jenkins password
      debug:
        msg: "Initial Jenkins password: {{ initial_password.stdout }}"

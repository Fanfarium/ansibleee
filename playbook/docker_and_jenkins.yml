---
- name: Install Docker and Jenkins in a Docker container
  hosts: master
  become: yes
  collections:
    - community.docker

  tasks:
    - name: Remove old Docker packages
      apt:
        name: "{{ item }}"
        state: absent
      with_items:
        - docker.io
        - docker-doc
        - docker-compose
        - docker-compose-v2
        - podman-docker
        - containerd
        - runc

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present
      ignore_errors: yes

    - name: Add Jenkins GPG key manually
      shell: |
        curl -fsSL https://pkg.jenkins.io/debian/jenkins.io.key | apt-key add -

    - name: Add Jenkins repository manually
      shell: |
        echo "deb [arch=amd64] https://pkg.jenkins.io/debian-stable binary/" > /etc/apt/sources.list.d/jenkins.list

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages for Docker installation
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure Jenkins home directory exists
      file:
        path: /srv/jenkins_home
        state: directory
        mode: '0755'

    - name: Set correct ownership for Jenkins home directory
      file:
        path: /srv/jenkins_home
        owner: 1000
        group: 1000
        recurse: yes

    - name: Stop and remove existing Jenkins container
      docker_container:
        name: jenkins
        state: absent

    - name: Pull Jenkins image with lts-jdk17 tag
      docker_image:
        name: jenkins/jenkins
        tag: lts-jdk17
        source: pull

    - name: Start Jenkins container with lts-jdk17 tag
      docker_container:
        name: jenkins
        image: jenkins/jenkins:lts-jdk17
        state: started
        restart_policy: on-failure
        ports:
          - "8080:8080"
          - "50000:50000"
        volumes:
          - /srv/jenkins_home:/var/jenkins_home

    - name: Output initial Jenkins password
      command: cat /srv/jenkins_home/secrets/initialAdminPassword
      register: initial_password
      ignore_errors: yes

    - name: Show initial Jenkins password
      debug:
        msg: "Initial Jenkins password: {{ initial_password.stdout }}"

    - name: Remove existing SSH key in Jenkins container
      command: docker exec jenkins rm -f /var/jenkins_home/.ssh/id_ed25519 /var/jenkins_home/.ssh/id_ed25519.pub

    - name: Generate SSH key inside Jenkins Docker container
      command: docker exec jenkins bash -c 'mkdir -p /var/jenkins_home/.ssh/ && ssh-keygen -t ed25519 -f /var/jenkins_home/.ssh/id_ed25519 -C "artemlukianyk2005@gmail.com" -q -N ""'
      become: yes

    - name: Display Jenkins SSH public key
      command: docker exec jenkins cat /var/jenkins_home/.ssh/id_ed25519.pub
      register: jenkins_ssh_pub_key

    - name: Display Jenkins SSH private key
      command: docker exec jenkins cat /var/jenkins_home/.ssh/id_ed25519
      register: jenkins_ssh_priv_key

    - name: Show Jenkins SSH public key
      debug:
        msg: "Jenkins SSH public key: {{ jenkins_ssh_pub_key.stdout }}"

    - name: Show Jenkins SSH private key
      debug:
        msg: "Jenkins SSH private key: {{ jenkins_ssh_priv_key.stdout }}"

    - name: Add GitHub to known hosts for Jenkins container
      command: docker exec jenkins bash -c 'ssh-keyscan -t ed25519 github.com >> /var/jenkins_home/.ssh/known_hosts'

    - name: Verify known hosts
      command: docker exec jenkins cat /var/jenkins_home/.ssh/known_hosts

    - name: Check if Jenkins is running
      uri:
        url: "http://192.168.0.100:8080"
        method: GET
        status_code: 200
        user: "admin"
        password: "{{ initial_password.stdout }}"
        force_basic_auth: yes
      register: jenkins_status
      retries: 60
      delay: 20
      until: jenkins_status.status == 200
